// Generated using `moon info`, DON'T EDIT IT
package "oboard/moonbit-eval/lex"

// Values
fn lex(Context) -> Unit

let token_postion : TokenPosition

let token_postion_array : Array[TokenPosition]

// Types and methods
pub(all) struct Context {
  str : String
  mut offset : Int
  array : Array[Token]
}
impl Show for Context

pub(all) enum Token {
  Number(Int)
  Number_Double(Double)
  Identifier(String)
  Fun_name(String)
  StringLiteral(String)
  Unit
  Bool
  Int
  Double
  String
  Tuple
  Array
  Main
  Not
  Loop
  For
  While
  Let
  Mut
  If
  Else
  Fn
  True
  False
  Add
  AddEqual
  Sub
  SubEqual
  Mul
  MulEqual
  Div
  DivEqual
  Assign
  EqEq
  LessThan
  LessEqual
  NotEqual
  GreaterThan
  GreaterEqual
  Comma
  Semicolon
  Colon
  PathSep
  Question
  DoubleQuote
  SingleQuote
  LParen
  RParen
  LBracket
  RBracket
  LBrace
  RBrace
  Arrow
  Comment
  Newline
  Skip
}
impl Eq for Token
impl Show for Token

pub(all) struct TokenPosition {
  mut token_number : Int
  mut line : Int
  mut column_start : Int
  mut column_end : Int
}
impl Show for TokenPosition

// Type aliases

// Traits

